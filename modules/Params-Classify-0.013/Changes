version 0.013; 2010-11-16

  * bugfix: avoid triggering a core assertion on debugging builds,
    by using OP_NULL as a stalking-horse opcode instead of OP_PUSHMARK
    (nothing actually broke apart from the assertion)

  * provide reserve definition of Newx(), to allow compilation on
    non-threaded Perls prior to 5.8.8

  * avoid a compiler warning from the reserve implementation of the
    ptr_table data structure

version 0.012; 2010-11-03

  * generate custom ops for most functions, to avoid heavyweight function
    calls at runtime

  * change "please update me" messages to "please update Params::Classify"
    for clarity

  * use shared SVs for return values from scalar_class() and ref_type()

  * allow is_able() and check_able() to be called with only one argument

  * change message generated by check_strictly_blessed() when called
    with only one argument, to be consistent between XS and pure Perl

  * refactor some Perl version portability code

  * in XS, declare "PROTOTYPES: DISABLE" to prevent automatic generation
    of unintended prototypes

  * jump through hoops to avoid compiler warnings

  * in t/setup_pp.pl, avoid a warning that occurs if XSLoader::load()
    is given no arguments, which is now a valid usage

version 0.011; 2010-08-21

  * bugfix: add a typemap entry for "const char *", to make XS version
    of scalar_class() work correctly on Perl 5.6, having been broken by
    the const fix in version 0.010

  * in XS code, on Perls where it exists (prior to 5.9.5), treat SVt_PVBM
    as a scalar referent type

version 0.010; 2010-08-20

  * in XS, use PERL_NO_GET_CONTEXT for efficiency

  * use full stricture in test suite

  * also test POD coverage of pure Perl implementation

  * in test suite, make all numeric comparisons against $] stringify it
    first, to avoid architecture-dependent problems with floating point
    rounding giving it an unexpected numeric value

  * make XS code const clean for gcc -Wwrite-strings

  * in Build.PL, explicitly set needs_compiler to avoid bogus
    auto-dependency on ExtUtils::CBuilder

  * in Build.PL, explicitly declare configure-time requirements

  * add MYMETA.yml to .cvsignore

version 0.009; 2009-10-07

  * port to Perl 5.11.0, supporting the addition of first-class regexp
    objects (which are actually a type of scalar) and the removal of
    the distinct RV type; new functions is_regexp() and check_regexp()

  * fix a test skip count in t/ref.t, which was causing false test
    failures on Perl 5.6

  * check for required Perl version at runtime

version 0.008; 2009-09-10

  * add "check_" functions for argument checking

  * strict argument checking in all functions that take control arguments

  * revise documentation

  * revise pure Perl code to avoid unnecessary argument copying

  * in XS code, make all auxiliary functions "static"

  * revise POD markup

  * remove bogus "exit 0" from Build.PL

version 0.007; 2009-05-13

  * XS implementation, used if available with fallback to existing pure
    Perl implementation if XS is not available

  * use simpler "parent" pragma in place of "base"

  * in documentation, use the term "truth value" instead of the less
    precise "boolean"

  * use full stricture in Build.PL

version 0.006; 2009-02-15

  * withdraw is_pure_string() and is_pure_number() functions, because
    they've never worked right and bring in a big dependency for marginal
    utility

  * use "base" pragma to import Exporter behaviour

  * test POD syntax and coverage

  * build with Module::Build instead of ExtUtils::MakeMaker

  * complete dependency list

  * include signature in distribution

  * in documentation, separate "license" section from "copyright" section

version 0.005; 2007-09-02

  * in t/purity.t, modify purity test on dualvar(0, "0") to operate
    appropriately on older Perls where this has a different numeric
    value from 0

  * in t/purity.t, fix a skip count for the case where dualvar() is
    not available

version 0.004; 2007-08-16

  * in t/purity.t, fix a skip count for the case where floating point
    zero is unsigned

version 0.003; 2007-08-15

  * in t/purity.t, modify purity test on dualvar(+0.0, "0") to operate
    appropriately on older Perls where "0" numifies to a floating
    point zero, and add a test for dualvar(0, "0")

version 0.002; 2007-01-25

  * add is_pure_string() and is_pure_number() functions that determine
    how complicated a string scalar is

  * in documentation for is_number(), reference Scalar::Number and
    Data::Integer

  * correct version requirement of Scalar::Util in module, making it
    consistent with the dependency listed in Makefile.PL

version 0.001; 2006-08-03

  * bugfix: in is_number(), check whether numeric conversion warns, rather
    than using looks_like_number(), to avoid being confused by dualvars

  * in t/ref.t, skip *foo{FORMAT} tests on older Perls that don't provide
    that facility

  * refer to Data::Float for classification of floating point values

  * versioned dependencies in .pm

  * declare module dependencies in Makefile.PL

  * correct .cvsignore (had copy&modify detritus)

  * include Changes file

version 0.000; 2004-03-20

  * initial released version
